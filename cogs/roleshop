import discord
from discord.ext import commands
import random
import json
import os
from cogs import shop
from cogs import currency

intents = discord.Intents.default()
intents.members = True
intents.guilds = True
os.chdir(" ")
client = commands.Bot(command_prefix='#', intents=intents)

async def open_account(user):
    users = await get_bank_data()

    if str(user.id) in users:
        return False
    else:
        users[str(user.id)] = {}
        users[str(user.id)]["wallet"] = 0
        users[str(user.id)]["bank"] = 0

    with open("bank.json", "w") as f:
        json.dump(users, f)
    return True


async def get_bank_data():
    with open("bank.json", "r") as f:
        users = json.load(f)
    return users


async def update_bank(user, change=0, mode="wallet"):
    users = await get_bank_data()

    users[str(user.id)][mode] += change

    with open("bank.json", "w") as f:
        json.dump(users, f)
    bal = [users[str(user.id)]["wallet"], users[str(user.id)]["bank"]]
    return bal

class Roleshop(commands.Cog):
    def __init__(self, client):
        self.client = client
        
    @client.command()
    async def get(self, ctx, role: discord.Role = None):

        if role == None:
            embed = discord.Embed(description=f"{ctx.author.mention} please mention the role")
            await ctx.channel.send(embed=embed)

        if role.name == "taka taka":
            price = 100
        users = await get_bank_data()
        bal = await update_bank(ctx.author)

        if bal[0] < price:
            embed = discord.Embed(description=f"not enough money lol")
            await ctx.channel.send(embed=embed)
            return


        roles_ = discord.utils.get(ctx.guild.roles, name=role.name)
        user = ctx.message.author
        await user.add_roles(roles_)
        embed = discord.Embed(description=f"{ctx.author.mention} you got the role {role}")
        await ctx.channel.send(embed=embed)

        with open("bank.json", "w") as f:
            json.dump(users, f)

        await update_bank(ctx.author, price * -1, "wallet")



def setup(client):
    client.add_cog(Roleshop(client))
